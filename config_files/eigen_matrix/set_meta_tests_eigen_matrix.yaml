# %n, where n is an integer = input set
# %e = empty set
# %u = universe
# %m = metamorphic test variable
#
# formula names taken from
# https://www.allaboutcircuits.com/technical-articles/boolean-identities/
---
input_count: 3
meta_var_type: "Eigen::MatrixXf"
meta_test_count: 5
variant_count: 20
meta_check:
    - "assert(%m.operator==(%m0))"

generators:
    zero:
        identifier: 'z'
        relations:
            - "subMatrixXf(%1,%1)"
            - "addMatrixXf(%z,%z)"
            - "mulMatrixXf(%1,%z)"
            - "mulMatrixXf(%z,%1)"
    identity:
        identifier: 'i'
        relations:
            - "getIdentity()"
            - "mulMatrixXf(%1,Inverse(%1))"
            - "mulMatrixXf(Inverse(%1),%1)"
relations:
    identity_idempotent_absorption:
        - "%m=addMatrixXf(%1,%z)"
        - "%m=subMatrixXf(%1,%z)"
        - "%m=mulMatrixXf(%1,%i)"
        - "%m=mulMatrixXf(%i,%1)"
        - "%m=Inverse(Inverse(%1))"
        - "%m=%1.transpose().eval().transpose().eval()"

    addition_commut:
        - "%m=addMatrixXf(%1,%2)"
        - "%m=addMatrixXf(%2,%1)"

    addition:
        - "%m=addMatrixXf(%1,%2)"

    substraction:
        - "%m=subMatrixXf(%1,%2)"
        - "%m=subMatrixXf(%1,%2.operator*(getMinusOne()))"

    multiplication:
        - "%m=mulMatrixXf(%1,%2)"
        
    multiplication_assoc:
        - "%m=mulMatrixXf(mulMatrixXf(%1,%2),%3)"
        - "%m=mulMatrixXf(%1,mulMatrixXf(%2,%3))"

    distrib_mul_add:
        - "%m=mulMatrixXf(%1,addMatrixXf(%2,%3))"
        - "%m=addMatrixXf(mulMatrixXf(%1,%2),mulMatrixXf(%1,%3))"

    inverse:
        - "%m=Inverse(%1)"

    transpose:
        - "%m=%1.transpose().eval()"

    inverse_mul:
        - "%m=Inverse(mulMatrixXf(%1,%2))"
        - "%m=mulMatrixXf(Inverse(%2),Inverse(%1))"

    adjoint:
        - "%m=%1.adjoint().eval()"

    adj_mul2:
        - "%m=mulMatrixXf(%1,%2).adjoint().eval()"
        - "%m=mulMatrixXf(%2.adjoint().eval(),%1.adjoint().eval())"

    adj_mul1:
        - "%m=mulMatrixXf(%1,%1.adjoint().eval())"
        - "%m=mulMatrixXf(%1.adjoint().eval(),%1)"

        
