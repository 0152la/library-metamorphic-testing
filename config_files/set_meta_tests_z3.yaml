---
input_count: 3
variant_count: 15
meta_test_count: 7
meta_var_type: "z3::expr"
meta_check:
    - "assert(checkValid(%m,%m0));"

generators:
    one:
        identifier: 'o'
        relations:
            - "get_one(%1)"
            - "z3::ite(z3::operator!=(%1,0),z3::operator/(%1,%1),%o)"
            - "z3::pw(%1,%z)"

    zero:
        identifier: 'z'
        relations:
            - "get_zero(%1)"
            - "z3::operator*(%1,%z)"
            - "z3::operator-(%1,%1)"
relations:
    identity:
        - "%m=z3::operator+(%1,%z)"
        - "%m=z3::operator-(%1,%z)"
        - "%m=z3::operator*(%1,%o)"
        #- "%m=divWrap(%1,%o)"
        - "%m=z3::pw(%1,%o)"
        - "%m=z3::operator-(z3::operator-(%1))"
        - "%m=%1.simplify()"

    exponentiation_add:
        - "%m=z3::pw(%1,z3::operator+(expr_abs(%2),expr_abs(%3)))"
        - "%m=z3::operator*(z3::pw(%1,expr_abs(%2)),z3::pw(%1,expr_abs(%3)))"

    exponentiation_mul:
        - "%m=z3::pw(z3::operator*(%1,%2),%3)"
        - "%m=z3::operator*(z3::pw(%1,%3),z3::pw(%2,%3))"

    exponentiation_pw:
        - "%m=z3::pw(z3::pw(%1,%2),%3)"
        - "%m=z3::pw(%1,z3::operator*(%2,%3))"

    addition_assoc:
        - "%m=z3::operator+(z3::operator+(%1,%2),%3)"
        - "%m=z3::operator+(%1,z3::operator+(%2,%3))"

    multiplication_assoc:
        - "%m=z3::operator*(z3::operator*(%1,%2),%3)"
        - "%m=z3::operator*(%1,z3::operator*(%2,%3))"

    addition_commut:
        - "%m=z3::operator+(%1,%2)"
        - "%m=z3::operator+(%2,%1)"

    multiplication_commut:
        - "%m=z3::operator*(%1,%2)"
        - "%m=z3::operator*(%2,%1)"

    modulo:
        - "%m=z3::ite(z3::operator!=(%2,0),z3::mod(%1,%2),%1)"
        - "%m=z3::ite(z3::operator!=(%2,0),expr_abs(z3::rem(%1,%2)),%1)"
        - "%m=z3::ite(z3::operator!=(%2,0),z3::operator-(%1,z3::operator*(z3::operator/(%1,%2),%2)),%1)"
