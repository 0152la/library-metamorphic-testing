includes:
    - "gmpxx.h"
    - "testing/gmp-helpers.h"

pre_setup:

inputs:
    - name: 'depth_max'
      descriptor: '<unsigned int=val=10>'

# START HERE

types:
    - name: 'mpq_class'
    - name: 'mpz_class'
    - name: 'mpq_t'

funcs:
    - name: 'operator+'
      return_type: 'mpq_class'
      param_types: ['mpq_class', 'mpq_class']
      conditions: []
    - name: 'operator+'
      return_type: 'mpz_class'
      param_types: ['mpz_class', 'mpz_class']
      conditions: []
    - name: 'operator-'
      return_type: 'mpq_class'
      param_types: ['mpq_class', 'mpq_class']
      conditions: []
    - name: 'operator-'
      return_type: 'mpz_class'
      param_types: ['mpz_class', 'mpz_class']
      conditions: []
    - name: 'operator*'
      return_type: 'mpq_class'
      param_types: ['mpq_class', 'mpq_class']
      conditions: []
    - name: 'operator*'
      return_type: 'mpz_class'
      param_types: ['mpz_class', 'mpz_class']
      conditions: []
    - name: 'operator=='
      return_type: 'bool'
      param_types: ['mpq_class', 'mpq_class']
      conditions: []
    - name: 'abs'
      return_type: 'mpq_class'
      param_types: ['mpq_class']
      conditions: []
    - name: 'get_one'
      return_type: 'mpq_class'
      param_types: ['mpq_class']
      conditions: []
    - name: 'get_minus_one'
      return_type: 'mpq_class'
      param_types: ['mpq_class']
      conditions: []
    - name: 'get_mpq_t'
      enclosing_class: 'mpq_class'
      return_type: 'mpq_t'
      conditions: []
    - name: 'assert'
      enclosing_class: ''
      return_type: ''
      param_types: ['bool']
      condition: []
      special: true
    - name: 'mpq_class_w'
      return_type: 'mpq_class'
      param_types: ['mpz_class', 'mpz_class']
      conditions: []
    - name: 'get_num'
      return_type: 'mpz_class'
      enclosing_class: 'mpq_class'
      conditions: []
    - name: 'get_den'
      return_type: 'mpz_class'
      enclosing_class: 'mpq_class'
      conditions: []
    - name: 'get_zero_int'
      return_type: 'mpz_class'
      conditions: []
      special: true


constructors:
    - return_type: 'mpq_class'
      param_types: ['<int=random=[-1000,1000]>','<int=random=[0,1000]>' ]
    - return_type: 'mpz_class'
      param_types: ['<int=random=[-1000,1000]>']

# END HERE

set_gen:
    - type: 'func'
      func: 'operator+'
      return: '<special=output_var=>'
