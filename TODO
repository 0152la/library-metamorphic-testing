Presumably major, high value engineering

* Combine meta_tester with api_fuzzer; gives:
    - separate declaration of generators
    - use on-the-fly generated values
* Some general knowledge to be used between meta tests (i.e. random choices for
variables or values (can tie into above)


-------------------------------------------------------------------------------

* change specification fields as decided with Ally a while ago
* add pointer type support to fuzzer
* add primitive type support to meta tester
* move to using smart pointers and move semantics throughout

-------------------------------------------------------------------------------

no basic sets
no constraints per equality / inequality

set_meta_tester.cpp
* further integrate with ApiFuzzer (e.g. random int generation)

api_fuzzer.cpp
* intersperse generation with metamorphic testing
* merge ApiFuzzerNew with ApiFuzzer

api_elements.cpp
* finish ApiExpr definition and replace the hardcoded linear expression
generation hack

test_emitter.cpp
* move paths to config file
